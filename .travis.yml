dist: trusty
language: cpp
sudo: true

# package required for every entry in the compiler matrix
addons:
  apt:
    packages:
    - python3

# compiler matrix
matrix:
  include:
    - compiler: gcc
      env: COMPILERC=gcc-4.9
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
    - compiler: gcc
      env: COMPILERC=gcc-5
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
    - compiler: gcc
      env: COMPILERC=gcc-6
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
    - compiler: clang
      env:
          - COMPILERC=clang
          - CLANGV=3.6.2
    - compiler: clang
      env:
          - COMPILERC=clang
          - CLANGV=3.7.1
    - compiler: clang
      env:
          - COMPILERC=clang
          - CLANGV=3.8.1
    - compiler: clang
      env:
          - COMPILERC=clang
          - CLANGV=3.9.0
          - RUNCLANGTIDY=TRUE

# install clang, clang-tidy, bear
before_install:
    - mkdir $HOME/clang+llvm
    - export PATH=$HOME/clang+llvm/bin:$PATH
    - if [ -n "$CLANGV" ]; then wget http://llvm.org/releases/$CLANGV/clang+llvm-$CLANGV-x86_64-linux-gnu-ubuntu-14.04.tar.xz -O $HOME/clang+llvm.tar.xz; fi
    - if [ -n "$CLANGV" ]; then tar xf $HOME/clang+llvm.tar.xz -C $HOME/clang+llvm --strip-components 1; fi
    - if [ -n "$RUNCLANGTIDY" ]; then git clone https://github.com/rizsotto/Bear.git; fi
    - if [ -n "$RUNCLANGTIDY" ]; then cd Bear; fi
    - if [ -n "$RUNCLANGTIDY" ]; then cmake .; fi
    - if [ -n "$RUNCLANGTIDY" ]; then make all; fi
    - if [ -n "$RUNCLANGTIDY" ]; then sudo make install; fi
    - if [ -n "$RUNCLANGTIDY" ]; then cd ..; fi

# build and test
script:
    - $COMPILERC --version
    - make CI=1 CC=$COMPILERC
    - make test CC=$COMPILERC
    - if [ -n "$RUNCLANGTIDY" ]; then make clean; fi
    - if [ -n "$RUNCLANGTIDY" ]; then bear make test example CC=$COMPILERC; fi
    - if [ -n "$RUNCLANGTIDY" ]; then git ls-files '*.c' | xargs -P 1 -I{} clang-tidy -header-filter=.* -p . {}; fi
