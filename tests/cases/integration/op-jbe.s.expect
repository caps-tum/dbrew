>>> Testcase known par = 1.
Saving current emulator state: new with esID 0
Capture 'H-call' (into test|0 + 0)
Processing BB (test|0)
Emulation Static State (esID 0, call depth 0):
  Registers: %rsp (R 0), %rdi (0x1)
  Flags: (none)
  Stack: (none)
Decoding BB test ...
                test:  48 c7 c0 31 32 12 ff  mov     $0xffffffffff123231,%rax
              test+7:  48 39 f8              cmp     %rdi,%rax
             test+10:  76 03                 jbe     $test+15
Emulate 'test: mov $0xffffffffff123231,%rax'
Emulate 'test+7: cmp %rdi,%rax'
Emulate 'test+10: jbe $test+15'
Decoding BB test+12 ...
             test+12:  31 c0                 xor     %eax,%eax
             test+14:  c3                    ret    
Emulate 'test+12: xor %eax,%eax'
Emulate 'test+14: ret'
Capture 'H-ret' (into test|0 + 1)
Capture 'mov $0x0,%rax' (into test|0 + 2)
Capture 'ret' (into test|0 + 3)
OPT!!
Generating code for BB test|0 (4 instructions)
  I 0 : H-call                           (test|0)+0 
  I 1 : H-ret                            (test|0)+0 
  I 2 : mov     $0x0,%rax                (test|0)+0  48 31 c0
  I 3 : ret                              (test|0)+3  c3
BB gen (2 instructions):
                 gen:  48 31 c0              xor     %rax,%rax
               gen+3:  c3                    ret    
