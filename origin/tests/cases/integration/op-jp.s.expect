>>> Testcase known par = 1.
Saving current emulator state: new with esID 0
Capture 'H-call' (into test|0 + 0)
Processing BB (test|0)
Emulation Static State (esID 0, call depth 0):
  Registers: %rsp (R 0), %rdi (0x1)
  Flags: (none)
  Stack: (none)
Decoding BB test ...
                test:  48 83 c7 02           add     $0x2,%rdi
              test+4:  7a 03                 jp      $test+9
Emulate 'test: add $0x2,%rdi'
Emulate 'test+4: jp $test+9'
Decoding BB test+9 ...
              test+9:  b8 01 00 00 00        mov     $0x1,%eax
             test+14:  c3                    ret    
Emulate 'test+9: mov $0x1,%eax'
Emulate 'test+14: ret'
Capture 'H-ret' (into test|0 + 1)
Capture 'mov $0x1,%rax' (into test|0 + 2)
Capture 'ret' (into test|0 + 3)
Generating code for BB test|0 (4 instructions)
  I 0 : H-call                           (test|0)+0   
  I 1 : H-ret                            (test|0)+0   
  I 2 : mov     $0x1,%rax                (test|0)+0    48 c7 c0 01 00 00 00
  I 3 : ret                              (test|0)+7    c3
Generated: 8 bytes (pass1: 34)
BB gen (2 instructions):
                 gen:  48 c7 c0 01 00 00 00  mov     $0x1,%rax
               gen+7:  c3                    ret    
